2657. Find the Prefix Common Array of Two Arrays

You are given two 0-indexed integer permutations A and B of length n.

A prefix common array of A and B is an array C such that C[i] is equal to the count of numbers that are present at or before the index i in both A and B.

Return the prefix common array of A and B.

A sequence of n integers is called a permutation if it contains all integers from 1 to n exactly once.



Code:
class Solution {
  public int[] findThePrefixCommonArray(int[] A, int[] B) {
    final int n = A.length;
    int prefixCommon = 0;
    int[] ans = new int[n];
    int[] count = new int[n + 1];

    for (int i = 0; i < A.length; ++i) {
      if (++count[A[i]] == 2)
        ++prefixCommon;
      if (++count[B[i]] == 2)
        ++prefixCommon;
      ans[i] = prefixCommon;
    }

    return ans;
  }
}
